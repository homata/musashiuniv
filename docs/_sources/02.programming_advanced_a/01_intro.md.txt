はじめに
====

**エラーが出たら**

エラーはつきものです。どんなにPythonに慣れたとしても、エラーを避けることはできません。ですので、エラーとは仲良くなりましょう！

**エラーの対処方法**

* エラーメッセージは下から読みましょう：長いエラーメッセージでも下までスクロールダウンして最後の行を読みましょう。一般的に一番下に何が起きたのかに関するヒントがあることが多いです。
* 下の行から上へ読み進めると、どのようにしてエラーが発生したのかをトレースすることができます。
* もしエラーメッセージを読んでもわからない場合は、最後の行をコピーしてGoolgeなどで検索してみましょう。Stackoverflowというサイトで直接検索しても良いでしょう。
* 検索はなるべく英語で行いましょう。英語の方が日本語より共有されている情報量が多いので、解決策に辿り着きやすいです。Googleの言語設定を変えると、検索結果の表示順などが変わリます
* エラーメッセージをAIに投げてみてください。原因や解決方法のヒントを教えてくます。

---

**AIとの協働学習**

プログラミング学習にAIを活用するには、**「コード生成による学習効率化」「エラー解決の補助」「個別指導を受けるメンター役」**などの方法があります。

デバッグ:

* 「エラーの原因として考えられることを教えてください」のように質問することで、AIから原理を学び、エラー解決能力を高められます。

学習の個別化と効率化:

* AIを「原理を教えてくれる先生」として活用することで、プログラミング知識を深めることができます。
* 自分の考えや推測をAIに伝えることで、より深い理解を得られます。
* AIに段階的にコードを生成させることで、一つずつできることを確認しながら学習を進めることができます。
* AIと学習者が共同で学習プロセスに参加し、互いに向上し合うことで、より高度なプログラミング学習が可能です
* AIにコードを修正させるのではなく、原理を質問する姿勢を意識することで、自身のスキル向上につながります。﻿

情報の検証:

* AIが出した回答が必ずしも正しいとは限らないため、最終的な判断は自身で行う必要があります

思考力の育成:

* AIのコード生成に頼りすぎず、オリジナリティのある考えを形にする思考力や行動力を身につけることが、変化の激しい時代にはより重要になります。

----

**ふりかえり**
* [Pythonとは](./pdf/02_01_python_r0.pdf)
* [NumpyとPandas](./pdf/02_02_numpy_pandas_r0.pdf)

