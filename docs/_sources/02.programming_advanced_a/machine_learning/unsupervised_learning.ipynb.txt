{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "26ec93c9-8072-497a-bd5d-ed54e5e2fd6d",
      "metadata": {
        "id": "26ec93c9-8072-497a-bd5d-ed54e5e2fd6d"
      },
      "source": [
        "# 教師なし学習\n",
        "\n",
        "## クラスタリング\n",
        "### K-means"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "acbaddaf-1427-439f-899d-80d32c0c6c01",
      "metadata": {
        "id": "acbaddaf-1427-439f-899d-80d32c0c6c01"
      },
      "source": [
        "irisの特徴量`petal_length`と`petal_width`を用いて、クラスタリング手法の一つであるK-meansを使ってクラスタリングします\n",
        "\n",
        "K-meansではクラスタの数を指定する必要があります。ここでは3つのクラスタを生成します。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "3e536482-3d6d-42a4-955a-3690dc3959dd",
      "metadata": {
        "id": "3e536482-3d6d-42a4-955a-3690dc3959dd"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "from sklearn import datasets\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "08abe37e-eef7-4fc8-aa65-086a94132258",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "08abe37e-eef7-4fc8-aa65-086a94132258",
        "outputId": "467767ff-18b1-469a-c49f-67ee23373fd8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)  \\\n",
              "0                5.1               3.5                1.4               0.2   \n",
              "1                4.9               3.0                1.4               0.2   \n",
              "2                4.7               3.2                1.3               0.2   \n",
              "3                4.6               3.1                1.5               0.2   \n",
              "4                5.0               3.6                1.4               0.2   \n",
              "\n",
              "   species  \n",
              "0        0  \n",
              "1        0  \n",
              "2        0  \n",
              "3        0  \n",
              "4        0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-46c6b3fe-80bb-4f49-9308-aa0c250f05ad\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal length (cm)</th>\n",
              "      <th>sepal width (cm)</th>\n",
              "      <th>petal length (cm)</th>\n",
              "      <th>petal width (cm)</th>\n",
              "      <th>species</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46c6b3fe-80bb-4f49-9308-aa0c250f05ad')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-46c6b3fe-80bb-4f49-9308-aa0c250f05ad button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-46c6b3fe-80bb-4f49-9308-aa0c250f05ad');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a25bd6e5-a989-4899-a142-18dd205897a8\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a25bd6e5-a989-4899-a142-18dd205897a8')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a25bd6e5-a989-4899-a142-18dd205897a8 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal length (cm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8280661279778629,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal width (cm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.435866284936698,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal length (cm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594667,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal width (cm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"species\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "data = datasets.load_iris()\n",
        "df = pd.DataFrame(data.data, columns=data.feature_names).reset_index(drop=True)\n",
        "target = pd.DataFrame(data.target, columns = ['species']).reset_index(drop=True)\n",
        "df = df.merge(target, left_index=True, right_index=True, )\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "9cd156d1-60e7-4d72-af8d-0618c9312fef",
      "metadata": {
        "id": "9cd156d1-60e7-4d72-af8d-0618c9312fef"
      },
      "outputs": [],
      "source": [
        "X_iris=df[['petal length (cm)', 'petal width (cm)']]\n",
        "\n",
        "model = KMeans(n_clusters=3) # k-meansモデル、n_clustersでクラスタの数を指定\n",
        "model.fit(X_iris) # モデルをデータに適合\n",
        "y_km=model.predict(X_iris) # クラスタを予測"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "78c2bc88-5c84-4aec-948d-3879f8e5999f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "78c2bc88-5c84-4aec-948d-3879f8e5999f",
        "outputId": "1d1efa3a-336d-42f1-dd89-1f7f58b06a92"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure()\n",
        "plt.scatter(df['petal length (cm)'], df['petal width (cm)'], c = y_km)\n",
        "plt.colorbar()\n",
        "plt.xlabel('petal length')\n",
        "plt.ylabel('petal width')\n",
        "plt.title('K-means clustering')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "77a3fe53-57f5-425a-80b7-203c534cc211",
      "metadata": {
        "id": "77a3fe53-57f5-425a-80b7-203c534cc211"
      },
      "source": [
        "### PCA（主成分分析）次元削減\n",
        "\n",
        "PCA（主成分分析）で次元削減を行う目的はいくつかあります。  \n",
        "主に以下のような理由です。\n",
        "\n",
        "**計算コストの削減**  \n",
        "特徴量が多いと、機械学習モデルの学習に時間がかかります、過学習のリスクも高まります。  \n",
        "PCAで特徴量を減らすことで、学習時間の短縮やモデルのシンプル化が可能になります。  \n",
        "特徴量が減れば、学習・予測の速度が向上します。  \n",
        "\n",
        "**情報の圧縮（次元削減）**  \n",
        "データには多数の特徴量（変数）があることが多いですが、それらの中には似たような情報を持っているものもあります。  \n",
        "PCAは相関の高い変数をまとめ、「できるだけ情報を失わないように」少数の新しい軸（主成分）に圧縮します  \n",
        "→ 少ない次元で効率的にデータを表現できる。  \n",
        "→ 重要な特徴を抽出できる。  \n",
        "→ 予測に本当に役立つ要素だけを取り出すことができます。  \n",
        "\n",
        "**データの可視化が容易になる**  \n",
        "圧縮した2次元・3次元データなら、散布図などで傾向を直感的に把握できます。   \n",
        "PCAを使えば、高次元のデータを2次元や3次元に射影できるので、クラスタリングの傾向や異常値の存在などが見やすくなります。  \n",
        "\n",
        "**ノイズ除去**  \n",
        "高次元データの中には、分析にほとんど寄与しない「ノイズ的な変数」も含まれています。  \n",
        "PCAでは分散が小さい成分（＝ほとんど情報を持たない軸）を落とすことで、ノイズを減らし、より本質的な構造を捉えることができます。  \n",
        "\n",
        "ここでは、irisデータの4つの特徴量を2次元にPCAを用いて削減します。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "id": "7104c1d7-d363-47e2-b610-d401d0107d45",
      "metadata": {
        "id": "7104c1d7-d363-47e2-b610-d401d0107d45"
      },
      "outputs": [],
      "source": [
        "X = df.iloc[:, :4]\n",
        "y = df['species']"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3ff047ec-05f0-4e7b-9604-b705cd52329a",
      "metadata": {
        "id": "3ff047ec-05f0-4e7b-9604-b705cd52329a"
      },
      "source": [
        "PCAを実行する前に標準化します。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "id": "81f42393-32d7-49f8-9c4a-528e952397fb",
      "metadata": {
        "id": "81f42393-32d7-49f8-9c4a-528e952397fb"
      },
      "outputs": [],
      "source": [
        "# 特徴量の標準化\n",
        "X = StandardScaler().fit_transform(X)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "id": "9e61deff-5b30-4a95-a716-43de359c9eb1",
      "metadata": {
        "id": "9e61deff-5b30-4a95-a716-43de359c9eb1"
      },
      "outputs": [],
      "source": [
        "# PCAの実行（2次元に圧縮）\n",
        "pca = PCA(n_components=2)\n",
        "X_pca = pca.fit_transform(X)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(X.shape) # もともとの特徴量"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1kng7T00mBhq",
        "outputId": "78a48a4f-1058-4a0f-e6c3-0589b4cf4173"
      },
      "id": "1kng7T00mBhq",
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(150, 4)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_pca.shape) # 特徴量が圧縮されている。次元が削減されている"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_nvIjHQimKIn",
        "outputId": "db3fc51b-645e-431b-fa4d-49fb62c5d1b3"
      },
      "id": "_nvIjHQimKIn",
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(150, 2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "id": "e79e3dda-2ad8-430b-b6c8-e7275596c363",
      "metadata": {
        "id": "e79e3dda-2ad8-430b-b6c8-e7275596c363"
      },
      "source": [
        "どのくらいデータを説明できているか、寄与率(explained_variance_ratio)を用いて確認します。\n",
        "\n",
        "PCAの説明分散（または固有値）は、各主成分に帰属させることができる分散を示します。  \n",
        "各値は各主成分の分散に等しく、配列の長さは n_components で定義された成分の数に等しくなります。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "db8ec47c-045c-4bca-a420-5e1942b4689e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "db8ec47c-045c-4bca-a420-5e1942b4689e",
        "outputId": "8c6b2ea0-b0dd-4ea8-d2d0-a1d915bc0c2b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "寄与率: [0.72962445 0.22850762]\n",
            "累積寄与率: 0.9581320720000163\n"
          ]
        }
      ],
      "source": [
        "print(\"寄与率:\", pca.explained_variance_ratio_)  # 寄与率\n",
        "print(\"累積寄与率:\", sum(pca.explained_variance_ratio_)) # 累積寄与率"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9498ed5c-1815-45ef-85b0-bd1f428b37d0",
      "metadata": {
        "id": "9498ed5c-1815-45ef-85b0-bd1f428b37d0"
      },
      "source": [
        "PCA後のデータを可視化"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "3767a670-5bd7-4466-b47b-218aea833145",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "3767a670-5bd7-4466-b47b-218aea833145",
        "outputId": "d62772dc-3ae9-463b-8be7-d257784fc585"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "colors = ['navy', 'turquoise', 'darkorange']\n",
        "target_names =  ['setosa','versicolor','virginica']\n",
        "for color, i, target_name in zip(colors, [0, 1, 2], target_names):\n",
        "    plt.scatter(X_pca[y == i, 0], X_pca[y == i, 1], color=color, alpha=.8, label=target_name)\n",
        "plt.legend(loc='best', shadow=False, scatterpoints=1)\n",
        "plt.title('PCA of IRIS dataset')\n",
        "plt.show()"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.16"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}